import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as s,d as a}from"./app-l65TvXU-.js";const n={},t=a(`<h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述</span></a></h2><p>建议在电脑中使用 <code>conda</code> 来管理 <code>python</code> 版本。</p><p>我之前是使用 <code>pyenv</code> 和 <code>conda</code> 。平时并不激活 <code>conda</code> 环境，使用pyenv环境中的python。但是我最近发现这样似乎存在冲突问题，使用 <code>pip</code> 就出现 <code>pyenv segmentation fault code 11</code> 的问题。重装 pyenv、装其他版本的python、更新 pip 都试过了，都没有解决。</p><p>最后我卸载pyenv，只使用conda来进行环境管理，就没有问题了。</p><h2 id="过程" tabindex="-1"><a class="header-anchor" href="#过程"><span>过程</span></a></h2><ol><li>移除pyenv：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uninstall</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pyenv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>清理pyenv相关的shell配置：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 编辑 ~/.zshrc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 删除以下相关行：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># eval &quot;$(pyenv init --path)&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># eval &quot;$(pyenv init -)&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>删除pyenv目录：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.pyenv</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/homebrew/opt/pyenv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>重载shell配置：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.zshrc</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  # 或 source ~/.bash_profile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="5"><li>对于Conda的安装和配置，建议：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 如果还没安装Conda</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 推荐使用Miniforge (支持ARM架构)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Miniforge3-MacOSX-arm64.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 安装后，初始化Conda</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zsh</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  # 如果使用zsh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),l=[t];function h(o,d){return s(),e("div",null,l)}const c=i(n,[["render",h],["__file","managementPythonVersionOnMac.html.vue"]]),k=JSON.parse('{"path":"/docs/code/environment/managementPythonVersionOnMac.html","title":"pyenv segmentation fault code 11(M芯片MAC管理Python版本建议)","lang":"zh-CN","frontmatter":{"title":"pyenv segmentation fault code 11(M芯片MAC管理Python版本建议)","icon":"file","order":null,"date":"2024-11-30T00:00:00.000Z","category":["编程知识"],"tags":["Python"],"description":"描述 建议在电脑中使用 conda 来管理 python 版本。 我之前是使用 pyenv 和 conda 。平时并不激活 conda 环境，使用pyenv环境中的python。但是我最近发现这样似乎存在冲突问题，使用 pip 就出现 pyenv segmentation fault code 11 的问题。重装 pyenv、装其他版本的python、...","head":[["meta",{"property":"og:url","content":"https://blueboysalvat.github.io/docs/code/environment/managementPythonVersionOnMac.html"}],["meta",{"property":"og:site_name","content":"忧郁男孩的救赎"}],["meta",{"property":"og:title","content":"pyenv segmentation fault code 11(M芯片MAC管理Python版本建议)"}],["meta",{"property":"og:description","content":"描述 建议在电脑中使用 conda 来管理 python 版本。 我之前是使用 pyenv 和 conda 。平时并不激活 conda 环境，使用pyenv环境中的python。但是我最近发现这样似乎存在冲突问题，使用 pip 就出现 pyenv segmentation fault code 11 的问题。重装 pyenv、装其他版本的python、..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"WangWenpeng"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:published_time","content":"2024-11-30T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pyenv segmentation fault code 11(M芯片MAC管理Python版本建议)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-30T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WangWenpeng\\",\\"url\\":\\"blueboysalvat.github.io\\"}]}"]]},"headers":[{"level":2,"title":"描述","slug":"描述","link":"#描述","children":[]},{"level":2,"title":"过程","slug":"过程","link":"#过程","children":[]}],"git":{},"readingTime":{"minutes":0.89,"words":268},"filePathRelative":"docs/code/environment/managementPythonVersionOnMac.md","localizedDate":"2024年11月30日","excerpt":"<h2>描述</h2>\\n<p>建议在电脑中使用 <code>conda</code> 来管理 <code>python</code> 版本。</p>\\n<p>我之前是使用 <code>pyenv</code> 和 <code>conda</code> 。平时并不激活 <code>conda</code> 环境，使用pyenv环境中的python。但是我最近发现这样似乎存在冲突问题，使用 <code>pip</code> 就出现 <code>pyenv segmentation fault code 11</code> 的问题。重装 pyenv、装其他版本的python、更新 pip 都试过了，都没有解决。</p>","autoDesc":true}');export{c as comp,k as data};
