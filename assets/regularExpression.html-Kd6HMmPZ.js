import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as h,c as p,b as i,e as s,a as n,w as l,d as e,o as k}from"./app-l65TvXU-.js";const d={},r=e("<li><p>任意一个字符表示匹配任意对应的字符，如 <code>a</code> 匹配 <code>a</code>，<code>7</code>匹配<code>7</code>，<code>-</code>匹配<code>-</code>。</p></li><li><p><code>[]</code>代表匹配中括号中其中任一个字符，如<code>[abc]</code>匹配 <code>a</code> 或 <code>b</code> 或 <code>c</code>。</p></li><li><p><code>-</code>在中括号里面和外面代表含义不同，如在外时，就匹配<code>-</code>，如果在中括号内<code>[a-b]</code>表示匹配26个小写字母中的任一个；<code>[a-zA-Z]</code>匹配大小写共52个字母中任一个；<code>[0-9]</code>匹配十个数字中任一个。</p></li><li><p><code>^</code> 在中括号里面和外面含义不同，如在外时，就表示开头，如 <code>^7[0-9]</code> 表示匹配开头是7的，且第二位是任一数字的字符串；如果在中括号里面，表示除了这个字符之外的任意字符(包括数字，特殊字符)，如 <code>[^abc]</code> 表示匹配除去 abc 之外的其他任一字符。</p></li>",4),o=i("code",null,".",-1),c=i("code",null,"\\d",-1),B=i("code",null,"\\D",-1),g=i("code",null,"\\s",-1),A=i("code",null,"[\\t\\n\\r\\x\\f]",-1),u=i("p",null,[s("9. "),i("code",null,"\\S"),s(" 表示由非空字符组成，"),i("code",null,"[^\\s]"),s("。")],-1),y=i("code",null,"\\w",-1),v=i("code",null,"[a-zA-Z0-9_]",-1),F=i("code",null,"\\W",-1),m=i("code",null,"?",-1),b=i("code",null,"+",-1),C=i("code",null,"*",-1),_=i("code",null,"{n}",-1),E=i("code",null,"{n,m}",-1),f=i("code",null,"{n,}",-1),q=i("p",null,[s("18. "),i("code",null,"XY"),s("表示X后面跟着Y，这里X和Y分别是正则表达式的一部分。")],-1),D=i("p",null,[s("19. "),i("code",null,"X|Y"),s('表示X或Y，比如"food|f"匹配的是foo（d或f），而"(food)|f"匹配的是food或f。')],-1),x=i("code",null,"(X)",-1),j=e(`<h2 id="在-javascript-中使用" tabindex="-1"><a class="header-anchor" href="#在-javascript-中使用"><span>在 JavaScript 中使用</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&lt;!</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">DOCTYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> html</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> lang</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;en&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> charset</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Title&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg1 = /^[0-9]$/;   //匹配一个数字  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg1.test(&quot;1&quot;));; //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg1.test(&quot;11&quot;));; //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg2 = /^[0-9][0-9]$/;  //匹配两个数字  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg3 = /^[a-zA-Z][0-9][0-9]$/;  //匹配一个字母连个数字  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg3.test(&quot;a11&quot;));  //ture  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg3.test(&quot;111&quot;));  //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg4 = /^[0-9]</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配数字(10次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg4.test(&quot;1234567890&quot;));    //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg4.test(&quot;12345&quot;));    //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg5 = /^[0-9]</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/; //匹配数字(6次-10次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg5.test(&quot;123456&quot;));    //ture  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg5.test(&quot;12345&quot;));     //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg6 = /^[0-9]+$/;   //匹配数字(1次或多次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg6.test(&quot;&quot;)); //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg6.test(&quot;111&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg7 = /^[0-9]?$/;   //匹配数字(0次或1次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg7.test(&quot;&quot;)); //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg7.test(&quot;1&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg7.test(&quot;1111111111&quot;));   //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg8 = /^[0-9]*$/;   //匹配数字(0次或多次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg8.test(&quot;&quot;)); //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg8.test(&quot;11&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg8.test(&quot;1111111111&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg9 = /^\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配数字(6次-10次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg9.test(&quot;12345&quot;));    //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg9.test(&quot;123456&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg10 = /^\\w</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配字母数字下划线(6次-10次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg9.test(&quot;12345&quot;));    //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg9.test(&quot;123456&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg11 = /^.</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配任意字符3次  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg11.test(&quot;---&quot;));  //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg12 = /^[a-zA-Z]\\w</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配以字母开头，以数字,字母,下划线组成的6-10位的字符串  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg12.test(&quot;12345&quot;));    //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg12.test(&quot;a123456&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg13 = /^\\\\\\\\$/; //匹配2个反斜杠  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg13.test(&quot;\\\\\\\\&quot;)); //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在-java-中使用" tabindex="-1"><a class="header-anchor" href="#在-java-中使用"><span>在 Java 中使用</span></a></h2><p>在 java 中使用需要两个反斜杠来表示一个反斜杠</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TestRegx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testRegx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> regx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">d{5}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//匹配5位数字  </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;12345&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">matches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(regx));  </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> regx2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">d{5}</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">*&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//匹配5位数字和一个星花  </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> str2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;12345*&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">str2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">matches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(regx2));  </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function $(S,z){const a=h("font");return k(),p("div",null,[i("ol",null,[r,i("li",null,[i("p",null,[o,s("表示匹配"),n(a,{color:"#de7802"},{default:l(()=>[s("任意的字符")]),_:1}),s("。")])]),i("li",null,[i("p",null,[c,s(" 表示"),n(a,{color:"#de7802"},{default:l(()=>[s("数字")]),_:1}),s("。")])]),i("li",null,[i("p",null,[B,s(" 表示"),n(a,{color:"#de7802"},{default:l(()=>[s("非数字")]),_:1}),s("。")])])]),i("p",null,[s("8. "),g,s(" 表示由"),n(a,{color:"#de7802"},{default:l(()=>[s("空字符")]),_:1}),s("组成，"),A,s("。")]),u,i("p",null,[s("10. "),y,s(" 表示"),n(a,{color:"#de7802"},{default:l(()=>[s("字母")]),_:1}),s("、"),n(a,{color:"#de7802"},{default:l(()=>[s("数字")]),_:1}),s("、"),n(a,{color:"#de7802"},{default:l(()=>[s("下划线")]),_:1}),s("，"),v,s("。")]),i("p",null,[s("11. "),F,s("表示"),n(a,{color:"#de7802"},{default:l(()=>[s("不是")]),_:1}),s("由字母、数字、下划线组成。")]),i("p",null,[s("12. "),m,s(" 表示出现"),n(a,{color:"#de7802"},{default:l(()=>[s("0次")]),_:1}),s("或"),n(a,{color:"#de7802"},{default:l(()=>[s("1次")]),_:1}),s("。")]),i("p",null,[s("13. "),b,s("表示出现"),n(a,{color:"#de7802"},{default:l(()=>[s("1次")]),_:1}),s("或"),n(a,{color:"#de7802"},{default:l(()=>[s("多次")]),_:1}),s("。")]),i("p",null,[s("14. "),C,s("表示出现"),n(a,{color:"#de7802"},{default:l(()=>[s("0次")]),_:1}),s("、"),n(a,{color:"#de7802"},{default:l(()=>[s("1次")]),_:1}),s("或"),n(a,{color:"#de7802"},{default:l(()=>[s("多次")]),_:1}),s("。")]),i("p",null,[s("15. "),_,s("表示出现"),n(a,{color:"#de7802"},{default:l(()=>[s("n次")]),_:1}),s("。")]),i("p",null,[s("16. "),E,s("表示出现"),n(a,{color:"#de7802"},{default:l(()=>[s("n~m次")]),_:1}),s("。")]),i("p",null,[s("17. "),f,s("表示出现"),n(a,{color:"#de7802"},{default:l(()=>[s("n次或n次以上")]),_:1}),s("。")]),q,D,i("p",null,[s("20. "),x,s("子表达式，将X看做是"),n(a,{color:"#de7802"},{default:l(()=>[s("一个整体")]),_:1})]),j])}const w=t(d,[["render",$],["__file","regularExpression.html.vue"]]),N=JSON.parse('{"path":"/docs/code/knowledge/regularExpression.html","title":"正则表达式","lang":"zh-CN","frontmatter":{"title":"正则表达式","icon":"file","order":null,"date":"2024-02-17T00:00:00.000Z","category":["知识"],"tags":null,"description":"任意一个字符表示匹配任意对应的字符，如 a 匹配 a，7匹配7，-匹配-。 []代表匹配中括号中其中任一个字符，如[abc]匹配 a 或 b 或 c。 -在中括号里面和外面代表含义不同，如在外时，就匹配-，如果在中括号内[a-b]表示匹配26个小写字母中的任一个；[a-zA-Z]匹配大小写共52个字母中任一个；[0-9]匹配十个数字中任一个。 ^ 在中...","head":[["meta",{"property":"og:url","content":"https://blueboysalvat.github.io/docs/code/knowledge/regularExpression.html"}],["meta",{"property":"og:site_name","content":"忧郁男孩的救赎"}],["meta",{"property":"og:title","content":"正则表达式"}],["meta",{"property":"og:description","content":"任意一个字符表示匹配任意对应的字符，如 a 匹配 a，7匹配7，-匹配-。 []代表匹配中括号中其中任一个字符，如[abc]匹配 a 或 b 或 c。 -在中括号里面和外面代表含义不同，如在外时，就匹配-，如果在中括号内[a-b]表示匹配26个小写字母中的任一个；[a-zA-Z]匹配大小写共52个字母中任一个；[0-9]匹配十个数字中任一个。 ^ 在中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"WangWenpeng"}],["meta",{"property":"article:published_time","content":"2024-02-17T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则表达式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-17T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WangWenpeng\\",\\"url\\":\\"blueboysalvat.github.io\\"}]}"]]},"headers":[{"level":2,"title":"在 JavaScript 中使用","slug":"在-javascript-中使用","link":"#在-javascript-中使用","children":[]},{"level":2,"title":"在 Java 中使用","slug":"在-java-中使用","link":"#在-java-中使用","children":[]}],"git":{},"readingTime":{"minutes":3.2,"words":959},"filePathRelative":"docs/code/knowledge/regularExpression.md","localizedDate":"2024年2月17日","excerpt":"<ol>\\n<li>\\n<p>任意一个字符表示匹配任意对应的字符，如 <code>a</code> 匹配 <code>a</code>，<code>7</code>匹配<code>7</code>，<code>-</code>匹配<code>-</code>。</p>\\n</li>\\n<li>\\n<p><code>[]</code>代表匹配中括号中其中任一个字符，如<code>[abc]</code>匹配 <code>a</code> 或 <code>b</code> 或 <code>c</code>。</p>\\n</li>\\n<li>\\n<p><code>-</code>在中括号里面和外面代表含义不同，如在外时，就匹配<code>-</code>，如果在中括号内<code>[a-b]</code>表示匹配26个小写字母中的任一个；<code>[a-zA-Z]</code>匹配大小写共52个字母中任一个；<code>[0-9]</code>匹配十个数字中任一个。</p>\\n</li>\\n<li>\\n<p><code>^</code> 在中括号里面和外面含义不同，如在外时，就表示开头，如 <code>^7[0-9]</code> 表示匹配开头是7的，且第二位是任一数字的字符串；如果在中括号里面，表示除了这个字符之外的任意字符(包括数字，特殊字符)，如 <code>[^abc]</code> 表示匹配除去 abc 之外的其他任一字符。</p>\\n</li>\\n<li>\\n<p><code>.</code>表示匹配。</p>\\n</li>\\n<li>\\n<p><code>\\\\d</code> 表示。</p>\\n</li>\\n<li>\\n<p><code>\\\\D</code> 表示。</p>\\n</li>\\n</ol>","autoDesc":true}');export{w as comp,N as data};
